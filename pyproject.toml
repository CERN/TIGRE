[tool.black]
line-length = 100

[build-system]
requires = [
	"setuptools", 
	"wheel", 
	"Cython", 
	"numpy",
	]
build-backend = "setuptools.build_meta"

[project]
name="pytigre"
version="3.0.0"
dependencies = [
	"matplotlib",
	"numpy>=1.20.0",
	"scipy",
	"h5py",
	"tqdm"
]
authors=[
	{name = "Ander Biguri"},
	{name = "Reuben Lindroos"}, 
	{name = "Sam Loescher"},
]
license={text="BSD 3-Clause"}
requires-python = ">=3.7,<3.12"

[dependency-groups]
dev = [
	"black~=20.8b1",
	"flake8~=3.8",
	"flake8-annotations~=2.5",
	"flake8-bugbear~=20.11",
	"flake8-docstrings~=1.5",
	"flake8-import-order~=0.18",
	"pep8-naming~=0.11",
	"pre-commit~=2.10",
]

[tool.setuptools.packages.find]
where = ["Python"]

[tool.setuptools.package-data]
"tigre.utilities.cuda_interface" = ["*.pyx", "*.pxd", "*.cpp"]

[tool.cibuildwheel]
build-frontend = "build[uv]"
skip = "pp* *musl*"
archs = ["native"]

[tool.cibuildwheel.linux]
#CUDA Installation
before-all = """
rpm --import https://developer.download.nvidia.com/compute/cuda/repos/rhel7/x86_64/7fa2af80.pub &&
yum-config-manager --add-repo https://developer.download.nvidia.com/compute/cuda/repos/rhel7/x86_64/cuda-rhel7.repo &&
yum clean all &&
yum -y install cuda-nvcc-12-4 cuda-cudart-devel-12-4 libcurand-devel-12-4 &&
ls -al /usr/local &&
export PATH=$PATH:/usr/local/cuda/bin &&
export CUDA_PATH=/usr/local/cuda &&
nvcc --version &&
export BUILD_WITH_CUDA=1
"""
